#!/usr/bin/env bash
#
# find PIDs with a string in their name.
# can be useful for simulating `ps aux` or `killall` except better, kinda
#

while :
do
  case $1 in
    --help | -\?)
      usage
      exit 0
      ;;
    -v | --verbose)
      # Each instance of -v adds 1 to verbosity
      verbose=$((verbose+1))
      shift
      ;;
    --) # End of all options
      shift
      break
      ;;
    -*)
      echo "FATAL: Unknown option : $1" >&2
      exit 1
      shift
      ;;
    *)  # no more options. Stop while loop
      break
      ;;
  esac
done

usage() {
  cat <<EOD
Usage: psx [OPTION]

Options
  -?, --help                  print this help and exit
  -v, --verbose               increase verbosity
EOD
  exit 1
}

if ! type psgrep &> /dev/null; then echo "ERROR: Missing dependency: psgrep" 1>&2; exit 1; fi
if ! command -v awk >/dev/null 2>&1 ; then echo "ERROR: Missing dependency: awk" 1>&2 ; exit 1 ; fi

word="$*"

if [[ -z "$verbose" ]]; then
  psgrep -ai "$word" | awk '{ if ( $2 !~"PID" ) { print $2 ; } }'
else
  psgrep -ai "$word" | awk '{ if ( $2 !~'$$' ) { print ; } }'
fi

# EOF
